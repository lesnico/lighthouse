import { useQuery } from "urql";
import { GET_PRODUCT_QUERY } from "../../lib/query";
import { useRouter } from "next/router";
import {
  DetailsStyle,
  DetailsStyleInner,
  ProductMedias,
  ProductInfo,
  Quantity,
  Buy,
  ToastStyled,
} from "../../styles/ProductDetails";
import { AiFillPlusCircle, AiFillMinusCircle } from "react-icons/ai";
import { FaShoppingCart } from "react-icons/fa";
import { useStateContext } from "../../lib/context";
import { Carousel } from "react-responsive-carousel";
import "react-responsive-carousel/lib/styles/carousel.min.css";
import Head from "next/head";
import { motion } from "framer-motion";
import toast from "react-hot-toast";
import { useEffect } from "react";
import Tracklist from "../../components/Tracklist";
import MoreProducts from "../../components/MoreProducts";

export default function ProductDetails() {
  //Use state
  const { qty, increaseQty, DecreaseQty, onAdd, setQty, convertDate } =
    useStateContext();

  useEffect(() => {
    setQty(1);
  }, []);

  //Fetch slug
  const { query } = useRouter();

  //Fetch Graphql data
  const [results] = useQuery({
    query: GET_PRODUCT_QUERY,
    variables: { slug: query.slug },
  });
  const { data, fetching, error } = results;
  //Check for the data coming in
  if (fetching) return;
  if (error) return;
  //exctract data
  const {
    title,
    description,
    release,
    format,
    label,
    image,
    artist,
    price,
    slug,
    tracklist,
  } = data.products.data[0].attributes;

  // Toast
  const notify = () => {
    toast.success(
      <ToastStyled>
        <b>{artist.data[0].attributes.artist_name}</b> - <b>{title}</b> ajouté
        au panier !
      </ToastStyled>,
      {
        duration: 1500,
        position: "bottom-center",
        style: {
          borderRadius: "10px",
          background: "#333",
          color: "#fff",
        },
        icon: "",
      }
    );
  };

  return (
    <>
      <Head>
        <title>
          Vinyls - {title + " - " + artist.data[0].attributes.artist_name}
        </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DetailsStyle>
        <DetailsStyleInner>
          <ProductMedias>
            {image.data.length > 1 ? (
              <Carousel
                autoPlay={false}
                showArrows={false}
                showThumbs={true}
                infiniteLoop={false}
                emulateTouch={true}
                showIndicators={false}
                showStatus={false}
              >
                {image.data.map((imageGallery) => (
                  <img
                    src={
                      imageGallery.attributes.formats.medium
                        ? imageGallery.attributes.formats.medium.url
                        : imageGallery.attributes.formats.small.url
                    }
                    alt={title}
                    key={slug}
                  />
                ))}
              </Carousel>
            ) : (
              <img
                src={image.data[0].attributes.formats.medium.url}
                alt={title}
              />
            )}
          </ProductMedias>

          <ProductInfo layout>
            <h1>
              {artist.data.length === 1 ? (
                <span>{artist.data[0].attributes.artist_name}</span>
              ) : (
                artist.data.map((artistCollab) => (
                  <span key={artistCollab.attributes.artist_name}>
                    {artistCollab.attributes.artist_name}
                  </span>
                ))
              )}

              <span>{title}</span>
            </h1>
            <ul className="product-infos-list">
              <li>{label}</li>
              <span> | </span>
              <li>{convertDate(release)}</li>
              <span> | </span>
              <li>{format}</li>
            </ul>
            <Quantity>
              <span>Quantité</span>
              <motion.button
                whileHover={{
                  scale: 0.9,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 1.1, transition: { duration: 0.1 } }}
              >
                <AiFillMinusCircle onClick={DecreaseQty} />
              </motion.button>
              <p>{qty}</p>
              <motion.button
                whileHover={{
                  scale: 0.9,
                  transition: { duration: 0.3 },
                }}
                whileTap={{ scale: 1.1, transition: { duration: 0.1 } }}
              >
                <AiFillPlusCircle onClick={increaseQty} />
              </motion.button>
            </Quantity>
            <Buy
              whileHover={{
                scale: 0.95,
                transition: { duration: 0.3 },
              }}
              whileTap={{ scale: 1.1, transition: { duration: 0.1 } }}
              onClick={() => {
                onAdd(data.products.data[0].attributes, qty);
                notify();
              }}
            >
              <span>Ajouter au panier</span>
              <span>
                {price + " €"} <FaShoppingCart />
              </span>
            </Buy>
            <h3>Description</h3>
            <p>{description}</p>
            {/* // TRACKLIST */}
            <Tracklist tracklist={tracklist} />
          </ProductInfo>
        </DetailsStyleInner>
      </DetailsStyle>

      {artist.data[0].attributes.products.data.length > 1 && (
        <MoreProducts artist={artist.data[0].attributes} title={title} />
      )}
    </>
  );
}
