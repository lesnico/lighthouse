import { useRouter } from "next/router";
import {
  SuccessStyle,
  SuccessStyleInner,
  SuccessHeader,
  SuccessInfos,
  SuccessAdress,
  SuccessProducts,
  KeepShopping,
} from "../styles/SuccessDetails";
import Head from "next/head";
import { FaShoppingCart } from "react-icons/fa";
import Link from "next/link";
import Footer from "../components/Footer";

const stripe = require("stripe")(
  `${process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY}`
);

export async function getServerSideProps(params) {
  const order = await stripe.checkout.sessions.retrieve(
    params.query.session_id,
    {
      expand: ["line_items"],
    }
  );
  return { props: { order } };
}

export default function Success({ order }) {
  console.log(order);
  const route = useRouter();

  return (
    <>
      <Head>
        <title>LightHouse - Record Shop - Confirmation de commande</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <SuccessStyle>
        <SuccessStyleInner
          animate={{ opacity: 1, scale: 1 }}
          initial={{ opacity: 0, scale: 0.75 }}
          transition={{ duration: 0.75 }}
        >
          <SuccessHeader>
            <h3>
              Merci pour votre commande {order.customer_details.name} üòÉ !
            </h3>
            <p>
              Un email de confirmation a √©t√© envoy√© √†
              <span>{order.customer_details.email}</span>
            </p>
          </SuccessHeader>
          <SuccessInfos>
            <SuccessAdress>
              {order.shipping_cost.shipping_rate !=
                "shr_1LlBsQCVQrxK13iywmlaBEts" && (
                <p>
                  <p className="success-title">Adresse :</p>
                  <p>{order.customer_details.name}</p>
                  <p>{order.customer_details.address.line1}</p>
                  <p>
                    {order.customer_details.address.postal_code},{" "}
                    {order.customer_details.address.city}{" "}
                    {order.customer_details.address.country}
                  </p>
                </p>
              )}
              {order.shipping_cost.shipping_rate ===
                "shr_1LlBsQCVQrxK13iywmlaBEts" && (
                <p>
                  Vous avez d√©cid√© de venir r√©cup√©rer votre commande en magasin.
                  C&apos;est un super id√©e ! On vous attends avec impatience au
                  <span
                    style={{
                      display: "flex",
                      flexDirection: "column",
                      padding: "2rem 0rem",
                      color: "#E29097",
                    }}
                  >
                    <b>105 Rue pierre Corneille</b>
                    <b>69003, Lyon</b>
                  </span>
                  N&apos;oubliez pas de venir avec votre re√ßu envoy√© par mail et
                  on s&apos;occupe du reste üòò !
                </p>
              )}
            </SuccessAdress>
            <SuccessProducts>
              <p className="success-title">Commande :</p>
              {order.line_items.data.map((item) => (
                <div key={item.id}>
                  <p>
                    {item.description} x {item.quantity}
                  </p>

                  <p>{item.price.unit_amount / 100} ‚Ç¨</p>
                </div>
              ))}
            </SuccessProducts>
          </SuccessInfos>
          <Link href={"/"}>
            <KeepShopping
              whileHover={{
                scale: 0.95,
                transition: { duration: 0.3 },
              }}
              whileTap={{ scale: 1.1, transition: { duration: 0.1 } }}
            >
              <span>Continuer vos achats !</span>
            </KeepShopping>
          </Link>
        </SuccessStyleInner>
      </SuccessStyle>
      <Footer />
    </>
  );
}
