import { useQuery } from "urql";
import { GET_ARTIST_QUERY } from "../../lib/query";
import { useRouter } from "next/router";
import {
  ArtistStyle,
  ArtistProfil,
  GalleryArtist,
  ProductStyles,
  ArtistStyleInner,
} from "../../styles/ArtistDetails";
import Link from "next/link";
import { motion } from "framer-motion";
import Head from "next/head";

export default function ArtistDetail() {
  //Fetch slug
  const { query } = useRouter();

  //Fetch Graphql data
  const [results] = useQuery({
    query: GET_ARTIST_QUERY,
    variables: { artist: query.artist },
  });

  const { data, fetching, error } = results;

  //Check for the data coming in
  if (fetching) return <p>Loading...</p>;
  if (error) return <p>Oh no... {error.message}</p>;

  //extract data
  const { artist_picture, artist_name, products } =
    data.artists.data[0].attributes;

  const artists = products.data;

  // Variants
  const container = {
    visible: {
      scale: 0.96,
      transition: {
        delayChildren: 0.01,
        duration: 0.01,
        type: "tween",
      },
    },
    hidden: { scale: 1 },
  };

  const Content = {
    visible: {
      scale: 0.96,
    },
  };

  return (
    <>
      <Head>
        <title>Vinyls - {artist_name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <ArtistStyle>
        <ArtistProfil initial={{ opacity: 0 }} animate={{ opacity: 1 }}>
          <motion.img
            className="bg-picture-artist"
            src={
              artist_picture.data
                ? artist_picture.data.attributes.formats.large.url
                : artists[0].attributes.image.data[0].attributes.formats.large
                    .url
            }
            alt={artist_name}
          />

          <motion.img
            className="profil-picture-artist"
            src={
              artist_picture.data
                ? artist_picture.data.attributes.formats.small.url
                : artists[0].attributes.image.data[0].attributes.formats.small
                    .url
            }
            alt={artist_name}
          />

          <motion.h1>{artist_name}</motion.h1>
        </ArtistProfil>
        <ArtistStyleInner>
          <GalleryArtist>
            {artists.map((album) => (
              <Link
                href={`/product/${album.attributes.slug}`}
                key={album.attributes.slug}
              >
                <ProductStyles
                  initial="hidden"
                  whileHover="visible"
                  variants={container}
                >
                  <motion.div variants={Content}>
                    <div>
                      <img
                        src={
                          album.attributes.image.data[0].attributes.formats
                            .small.url
                        }
                        alt=""
                      />
                    </div>

                    <h2>{album.attributes.title}</h2>
                    <h3>{album.attributes.price} â‚¬</h3>
                  </motion.div>
                </ProductStyles>
              </Link>
            ))}
          </GalleryArtist>
        </ArtistStyleInner>
      </ArtistStyle>
    </>
  );
}
